{
  "spark": [
    {
      "name": "plains",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.CloseDoor",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 102
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.LockDoor",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 109
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.OpenDoor",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 116
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.AddFuil",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 123
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.PlainPushback",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 130
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.StartEngine",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 137
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.TakeOff",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 144
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.Landing",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 152
        }
      ],
      "spark": "all"
    },
    {
      "name": "plains.CalcAmountOfFuil",
      "sloc": [
        {
          "file": "plains.ads",
          "line": 162
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "plains.ads",
      "line": 117,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.OpenDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 116
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 118,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.OpenDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 116
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 110,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.LockDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 109
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 111,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.LockDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 109
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.adb",
      "line": 85,
      "col": 7,
      "rule": "UNINITIALIZED",
      "severity": "info",
      "entity": {
        "name": "plains.CalcAmountOfFuil",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 162
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 124,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.AddFuil",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 123
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 125,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.AddFuil",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 123
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 103,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.CloseDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 102
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 104,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.CloseDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 102
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 131,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.PlainPushback",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 130
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 132,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.PlainPushback",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 130
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 138,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.StartEngine",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 137
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 139,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.StartEngine",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 137
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 145,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.TakeOff",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 144
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 146,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.TakeOff",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 144
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 153,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.Landing",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 152
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    },
    {
      "file": "plains.ads",
      "line": 154,
      "col": 6,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "plains.Landing",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 152
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    }
  ],
  "session_map": {
    " 1": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__closedoor",
    " 2": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__lockdoor",
    " 3": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__opendoor",
    " 4": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__addfuil",
    " 5": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__plainpushback",
    " 6": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__startengine",
    " 7": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__calcamountoffuil",
    " 8": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__takeoff__2",
    " 9": "C:\\Users\\Adam Dovciak\\Desktop\\SET10112\\obj\\gnatprove\\plains__landing__2"
  },
  "proof": [
    {
      "file": "plains.ads",
      "line": 107,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.CloseDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 102
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 107,
      "check_col": 14,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 114,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.LockDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 109
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 114,
      "check_col": 14,
      "session_dir": 2,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 121,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.OpenDoor",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 116
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 121,
      "check_col": 14,
      "session_dir": 3,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 128,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.AddFuil",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 123
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 33,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 128,
      "check_col": 14,
      "session_dir": 4,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 135,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.PlainPushback",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 130
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 26,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 135,
      "check_col": 14,
      "session_dir": 5,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 142,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.StartEngine",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 137
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 32,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 142,
      "check_col": 14,
      "session_dir": 6,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "plains.ads",
      "line": 163,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "plains.CalcAmountOfFuil",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 162
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown ()",
              "steps": 93,
              "time": 0
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 98,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 163,
      "check_col": 14,
      "cntexmp": {
        "plains.adb": {
          "previous": {
          },
          "current": {
            "87": [
              {
                "name": "dest",
                "value": "(Dest => A, others => ?)",
                "kind": "variable"
              }
            ],
            "88": [
              {
                "name": "Fuil",
                "value": "100",
                "kind": "variable"
              }
            ],
            "89": [
              {
                "name": "dest",
                "value": "(Dest => A, others => ?)",
                "kind": "variable"
              }
            ],
            "95": [
              {
                "name": "CalcAmountOfFuil'Result",
                "value": "100",
                "kind": "variable"
              },
              {
                "name": "Fuil",
                "value": "100",
                "kind": "variable"
              }
            ]
          }
        },
        "plains.ads": {
          "previous": {
          },
          "current": {
            "162": [
              {
                "name": "dest",
                "value": "(Dest => A, others => ?)",
                "kind": "variable"
              }
            ],
            "163": [
              {
                "name": "CalcAmountOfFuil'Result",
                "value": "100",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 0,
      "session_dir": 7,
      "how_proved": "prover"
    },
    {
      "file": "plains.adb",
      "line": 58,
      "col": 39,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "plains.TakeOff",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 144
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 120,
              "time": 8.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 178,
              "time": 1.10000000000000E-01
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.adb",
      "check_line": 58,
      "check_col": 39,
      "cntexmp": {
        "plains.adb": {
          "previous": {
          },
          "current": {
            "54": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 13021, PlainGear => LOWERED, PlainStage => TAKEOFF, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "57": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 13021, PlainGear => LOWERED, PlainStage => TAKEOFF, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "58": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 13021, PlainGear => LOWERED, PlainStage => TAKEOFF, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        },
        "plains.ads": {
          "previous": {
          },
          "current": {
            "96": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 13021, PlainGear => LOWERED, PlainStage => TAKEOFF, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 1,
      "session_dir": 8,
      "how_proved": "prover"
    },
    {
      "file": "plains.ads",
      "line": 150,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "plains.TakeOff",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 144
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 53,
              "time": 8.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 52,
              "time": 6.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 150,
      "check_col": 14,
      "session_dir": 8,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 7.99999982118607E-02
        }
      }
    },
    {
      "file": "plains.adb",
      "line": 73,
      "col": 39,
      "rule": "VC_RANGE_CHECK",
      "severity": "medium",
      "entity": {
        "name": "plains.Landing",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 152
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 99,
              "time": 6.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 178,
              "time": 8.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.adb",
      "check_line": 73,
      "check_col": 39,
      "cntexmp": {
        "plains.adb": {
          "previous": {
          },
          "current": {
            "69": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => Altitude'First, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "72": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => Altitude'First, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "73": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => Altitude'First, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        },
        "plains.ads": {
          "previous": {
          },
          "current": {
            "96": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => Altitude'First, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 2,
      "session_dir": 9,
      "how_proved": "prover"
    },
    {
      "file": "plains.ads",
      "line": 158,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "plains.Landing",
        "sloc": [
          {
            "file": "plains.ads",
            "line": 152
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 175,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 175,
              "time": 1.10000000000000E-01
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 220,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "plains.ads",
      "check_line": 158,
      "check_col": 14,
      "cntexmp": {
        "plains.adb": {
          "previous": {
          },
          "current": {
            "69": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 3021, PlainGear => LOWERED, PlainStage => PARKED, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "72": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 3021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "73": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 2021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "74": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 2021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "75": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 2021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "76": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 2021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        },
        "plains.ads": {
          "previous": {
          },
          "current": {
            "96": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 3021, PlainGear => LOWERED, PlainStage => PARKED, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ],
            "158": [
              {
                "name": "Aircraft",
                "value": "(PlainDest => (Dest => A, others => ?), Alt => 2021, PlainGear => LOWERED, PlainStage => LANDING, DoorStatus => LOCKED, Engine => (Fuil => 1, EngineState => ON))",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 3,
      "session_dir": 9,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.Landing",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 152
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.OpenDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.OpenDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.OpenDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 116
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.StartEngine",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 137
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.StartEngine",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 137
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.StartEngine",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 137
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 1
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.LockDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 109
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.LockDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 109
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.LockDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 109
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.CalcAmountOfFuil",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 162
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.AddFuil",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 123
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.AddFuil",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 123
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_POST",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_AORTE",
          "arg": {
            "name": "plains.CalcAmountOfFuil",
            "sloc": [
              {
                "file": "plains.ads",
                "line": 162
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.AddFuil",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 123
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.CloseDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 102
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.CloseDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 102
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.CloseDoor",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 102
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "plains.PlainPushback",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 130
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.PlainPushback",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 130
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "plains.PlainPushback",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 130
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "plains.TakeOff",
          "sloc": [
            {
              "file": "plains.ads",
              "line": 144
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 3.28125000000000E-01,
    "codepeer results": 5.05100004374981E-04,
    "init_why_sections": 7.54299981053919E-04,
    "gnatwhy3.transformations.detect_polymorphism": 1.56250000000000E-02,
    "globals/properties (advanced)": 1.02630001492798E-03,
    "gnatwhy3.transformations.eliminate_literal": 0.00000000000000E+00,
    "gnatwhy3.run_vcs": 4.68750000000000E-01,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 1.56250000000000E-02,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 0.00000000000000E+00,
    "flow analysis": 3.87189015746117E-02,
    "gnatwhy3.transformations.simplify_formula": 0.00000000000000E+00,
    "marking": 6.98200019542128E-04,
    "translation of standard": 4.60840016603470E-03,
    "gnatwhy3.register_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_epsilon": 1.56250000000000E-02,
    "globals (basic)": 3.81799996830523E-04,
    "gnatwhy3.schedule_vcs": 1.56250000000000E-02,
    "gnatwhy3.transformations.prepare_for_counterexmp": 0.00000000000000E+00,
    "gnatwhy3.save_session": 3.12500000000000E-02,
    "gnatwhy3.transformations.eliminate_inductive": 3.12500000000000E-02,
    "gnatwhy3.transformations.encoding_smt_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_unused_hypo": 1.56250000000000E-02,
    "gnatwhy3.transformations.eliminate_builtin": 0.00000000000000E+00,
    "gnatwhy3.transformations.discriminate_if_poly": 0.00000000000000E+00,
    "gnatwhy3.init": 4.15625000000000E+00
  }
}
